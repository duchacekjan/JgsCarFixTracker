// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.
@use './edit-table-theme' as edit-table;
@use './common-theme' as common;
@use './notification-table-theme' as notification-table;

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
//    `@include mat.legacy-typography-hierarchy(mat.define-legacy-typography-config());`

@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/

$JgsCarFixTracker-light-primary: mat.define-palette(mat.$light-green-palette);
$JgsCarFixTracker-light-accent: mat.define-palette(mat.$indigo-palette);

// The warn palette is optional (defaults to red).
$JgsCarFixTracker-light-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$JgsCarFixTracker-light-theme: mat.define-light-theme((
  color: (
    primary: $JgsCarFixTracker-light-primary,
    accent: $JgsCarFixTracker-light-accent,
    warn: $JgsCarFixTracker-light-warn,
  ),
  typography: mat.define-typography-config(),
  density: 0
));

$JgsCarFixTracker-dark-primary: mat.define-palette(mat.$green-palette);
$JgsCarFixTracker-dark-accent: mat.define-palette(mat.$indigo-palette);

// The warn palette is optional (defaults to red).
$JgsCarFixTracker-dark-warn: mat.define-palette(mat.$red-palette);
$JgsCarFixTracker-dark-theme: mat.define-dark-theme((
  color: (
    primary: $JgsCarFixTracker-dark-primary,
    accent: $JgsCarFixTracker-dark-accent,
    warn: $JgsCarFixTracker-dark-warn,
  ),
  typography: mat.define-typography-config(),
  density: 0
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($JgsCarFixTracker-light-theme);
@include edit-table.theme($JgsCarFixTracker-light-theme);
@include common.theme($JgsCarFixTracker-light-theme);

.darkMode {
  @include mat.all-component-colors($JgsCarFixTracker-dark-theme);
  @include edit-table.theme($JgsCarFixTracker-dark-theme);
  @include common.theme($JgsCarFixTracker-dark-theme);
}
